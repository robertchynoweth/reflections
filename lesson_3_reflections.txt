When would you want to use a remote repository rather than keeping all your work local?
When sharing work between multiple developers and when you want more than just visibility amonst your team.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
So you don't ignore changes that might affect your work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are used to create a copy of a repository in GitHub and not locally. It's used when you want to do work on a repository but don't have permission to change someone elses repository. Forks include all commits. Clones are a copy of a repository either locally or on GitHub and include all commits. Branches are just individual paths of commits inside of a repository and do not include all commits in the repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
Enables faster checking of the previous commits and faster diffs.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
TFS is a good alternative as it has all the same collobration features (probably because git had them first). Everything would be about the same difficulty. However, if I couldn't use a source control, it would probably be a mix of different communication tools like email and folder locations for files. This would be messy, confusing and take way more time than necessary.

